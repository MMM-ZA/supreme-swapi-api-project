{"ast":null,"code":"var _jsxFileName = \"/Users/mac/code/MMM-ZA/supreme-swapi-api-project/supreme-swapi-api-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport StarWars from '../src/assets/StarWarsPoster.png';\nimport MoviesList from './components/MoviesList';\nimport classes from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  async function FetchMoviesHandler() {\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://swapi.dev/api/films');\n      const data = await response.json();\n      const transformedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedData);\n      setIsLoading(false);\n    } catch (error) {\n      // Handle error if the fetch or JSON parsing fails\n      console.error('Error fetching movies:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes['main-image'],\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: StarWars,\n            alt: \"Star wars logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: FetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes['list-section'],\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 44\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found no movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 46\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StarWars","MoviesList","classes","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","FetchMoviesHandler","response","fetch","data","json","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","error","console","Fragment","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["/Users/mac/code/MMM-ZA/supreme-swapi-api-project/supreme-swapi-api-project/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport StarWars from '../src/assets/StarWarsPoster.png'\nimport MoviesList from './components/MoviesList';\nimport classes from './App.module.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function FetchMoviesHandler() {\n    setIsLoading(true);\n    try {\n      const response = await fetch('https://swapi.dev/api/films');\n      const data = await response.json();\n\n      const transformedData = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n\n      setMovies(transformedData);\n       setIsLoading(false);\n    } catch (error) {\n      // Handle error if the fetch or JSON parsing fails\n      console.error('Error fetching movies:', error);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <header>\n          <div className={classes['main-image']}>\n         <img src={StarWars} alt='Star wars logo'/>\n         </div>\n        </header>\n        <button onClick={FetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section className={classes['list-section']} >\n       {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n       {!isLoading && movies.length === 0 && <p>Found no movies</p>}\n       {isLoading && <h2>Loading...</h2> }\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}