{"ast":null,"code":"\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import MoviesList from './MoviesList';\n// import classes from './AddFavorites.module.css';\n// import AddMovie from './AddMovie';\n// import { database } from '../Firebase/firebase';\n// import { ref, get, child, push, set } from 'firebase/database';\n\n// const AddFavorites = () => {\n//   const [movies, setMovies] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const FetchMoviesHandler = useCallback(async () => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const dbRef = ref(database);\n//       const snapshot = await get(child(dbRef, 'movies'));\n//       if (!snapshot.exists()) {\n//         throw new Error('No data available');\n//       }\n\n//       const data = snapshot.val();\n//       const loadedMovies = [];\n\n//       for (const key in data) {\n//         loadedMovies.push({\n//           id: key,\n//           title: data[key].title,\n//           openingText: data[key].openingText,\n//           releaseDate: data[key].releaseDate,\n//         });\n//       }\n\n//       setMovies(loadedMovies);\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//     setIsLoading(false);\n//   }, []);\n\n//   useEffect(() => {\n//     FetchMoviesHandler();\n//   }, [FetchMoviesHandler]);\n\n//   const addMovieHandler = async (movie) => {\n//     const newMovieRef = push(ref(database, 'movies'));\n//     await set(newMovieRef, movie);\n//     FetchMoviesHandler();\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <AddMovie onAddMovie={addMovieHandler} />\n//         <button onClick={FetchMoviesHandler}>Fetch Movies</button>\n//       </section>\n//       <section className={classes['list-section']}>\n//         {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n//         {!isLoading && movies.length === 0 && !error && <p>Found no movies</p>}\n//         {!isLoading && error && <p>{error}</p>}\n//         {isLoading && <p>Loading...</p>}\n//       </section>\n//     </React.Fragment>\n//   );\n// };\n\n// export default AddFavorites;","map":{"version":3,"names":[],"sources":["/Users/mac/code/MMM-ZA/supreme-swapi-api-project/supreme-swapi-api-project/src/components/AddFavorites.js"],"sourcesContent":["\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import MoviesList from './MoviesList';\n// import classes from './AddFavorites.module.css';\n// import AddMovie from './AddMovie';\n// import { database } from '../Firebase/firebase';\n// import { ref, get, child, push, set } from 'firebase/database';\n\n// const AddFavorites = () => {\n//   const [movies, setMovies] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const FetchMoviesHandler = useCallback(async () => {\n//     setIsLoading(true);\n//     setError(null);\n//     try {\n//       const dbRef = ref(database);\n//       const snapshot = await get(child(dbRef, 'movies'));\n//       if (!snapshot.exists()) {\n//         throw new Error('No data available');\n//       }\n\n//       const data = snapshot.val();\n//       const loadedMovies = [];\n\n//       for (const key in data) {\n//         loadedMovies.push({\n//           id: key,\n//           title: data[key].title,\n//           openingText: data[key].openingText,\n//           releaseDate: data[key].releaseDate,\n//         });\n//       }\n\n//       setMovies(loadedMovies);\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//     setIsLoading(false);\n//   }, []);\n\n//   useEffect(() => {\n//     FetchMoviesHandler();\n//   }, [FetchMoviesHandler]);\n\n//   const addMovieHandler = async (movie) => {\n//     const newMovieRef = push(ref(database, 'movies'));\n//     await set(newMovieRef, movie);\n//     FetchMoviesHandler();\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <section>\n//         <AddMovie onAddMovie={addMovieHandler} />\n//         <button onClick={FetchMoviesHandler}>Fetch Movies</button>\n//       </section>\n//       <section className={classes['list-section']}>\n//         {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n//         {!isLoading && movies.length === 0 && !error && <p>Found no movies</p>}\n//         {!isLoading && error && <p>{error}</p>}\n//         {isLoading && <p>Loading...</p>}\n//       </section>\n//     </React.Fragment>\n//   );\n// };\n\n// export default AddFavorites;\n\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}