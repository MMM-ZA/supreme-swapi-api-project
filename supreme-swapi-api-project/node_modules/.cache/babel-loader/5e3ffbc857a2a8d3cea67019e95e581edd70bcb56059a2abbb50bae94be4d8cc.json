{"ast":null,"code":"var _jsxFileName = \"/Users/mac/code/MMM-ZA/supreme-swapi-api-project/supreme-swapi-api-project/src/components/AddFavorites.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport classes from './AddFavorites.module.css';\nimport AddMovie from './components/AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddFavorites = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const FetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-swapi-project-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n      setMovies(loadedMovies);\n\n      // const transformedData = data.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n\n      // setMovies(transformedData);\n    } catch (error) {\n      // Handle error if the fetch or JSON parsing fails\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    FetchMoviesHandler();\n  }, [FetchMoviesHandler]);\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-swapi-project-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(AddMovie, {\n          onAddMovie: addMovieHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: FetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes['list-section'],\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 44\n      }, this), !isLoading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found no movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 56\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 32\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AddFavorites, \"IgWYEckjsDOwRe4l9JcMmGX8VfQ=\");\n_c = AddFavorites;\nexport default AddFavorites;\nvar _c;\n$RefreshReg$(_c, \"AddFavorites\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","classes","AddMovie","jsxDEV","_jsxDEV","AddFavorites","_s","movies","setMovies","isLoading","setIsLoading","error","setError","FetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","Fragment","children","onAddMovie","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","length","_c","$RefreshReg$"],"sources":["/Users/mac/code/MMM-ZA/supreme-swapi-api-project/supreme-swapi-api-project/src/components/AddFavorites.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport classes from './AddFavorites.module.css';\nimport AddMovie from './components/AddMovie';\n\nconst AddFavorites = () => {\nconst [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  const FetchMoviesHandler = useCallback(async() =>  {\n    setIsLoading(true);\n    setError(null)\n    try {\n      const response = await fetch('https://react-swapi-project-default-rtdb.firebaseio.com/movies.json');\n        if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n        });\n      }\n\n      setMovies(loadedMovies);\n\n      // const transformedData = data.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n\n      // setMovies(transformedData);\n\n    } catch (error) {\n      // Handle error if the fetch or JSON parsing fails\n      setError(error.message)\n    }\n    setIsLoading(false);\n  },[]);\n\n  useEffect(() => {\n  FetchMoviesHandler();\n },[FetchMoviesHandler])\n\n async function addMovieHandler(movie) {\n    const response = await fetch('https://react-swapi-project-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n  const data = await response.json();\n  console.log(data);\n\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n        <button onClick={FetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section className={classes['list-section']} >\n       {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n       {!isLoading && movies.length === 0 && !error && <p>Found no movies</p>}\n       {!isLoading && error && <p>{error}</p>}\n       {isLoading && <p>Loading...</p> }\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default AddFavorites;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}